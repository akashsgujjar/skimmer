{"ast":null,"code":"import _classCallCheck from \"/Users/akashgujjar/Desktop/akashsgujjar.github.io/skimmer/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/akashgujjar/Desktop/akashsgujjar.github.io/skimmer/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/akashgujjar/Desktop/akashsgujjar.github.io/skimmer/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/akashgujjar/Desktop/akashsgujjar.github.io/skimmer/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/akashgujjar/Desktop/akashsgujjar.github.io/skimmer/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/akashgujjar/Desktop/akashsgujjar.github.io/skimmer/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/akashgujjar/Desktop/akashsgujjar.github.io/skimmer/src/Summary.js\";\nimport React from 'react';\nimport './App.css';\n\nvar Summary =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Summary, _React$Component);\n\n  function Summary(props) {\n    var _this;\n\n    _classCallCheck(this, Summary);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Summary).call(this, props));\n    _this.truncate = _this.truncate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Summary, [{\n    key: \"truncate\",\n    value: function truncate() {\n      var para = this.props.value;\n      var remove = ['the', 'be', 'to', 'of', 'and', 'a', 'in', 'that', 'have', 'I', 'while', 'still', 'it', 'for', 'not', 'on', 'with', 'he', 'as', 'you', 'do', 'at', 'though', 'i', '—', 'this', 'but', 'his', 'by', 'from', 'they', 'we', 'say', 'her', 'she', 'or', 'will', 'an', 'my', 'one', 'all', 'would', 'there', 'their', 'what', 'so', 'up', 'out', 'if', 'about', 'who', 'get', 'which', 'go', 'when', 'me', 'make', 'can', 'like', 'time', 'no', 'just', 'him', 'know', 'take', 'person', 'into', 'year', 'your', 'good', 'some', 'could', 'them', 'see', 'other', 'than', 'then', 'now', 'look', 'only', 'come', 'its', 'over', 'think', 'also', 'back', 'after', 'use', 'two', 'how', 'our', 'first', 'well', 'way', 'even', 'has', 'new', 'want', 'because', 'any', 'these', 'give', 'day', 'most', 'us', 'is', 'are', 'was'];\n      var words = para.split(\" \");\n      var filterWords = words.filter(function (word1) {\n        return remove.indexOf(word1) < 0;\n      });\n      var tally = [];\n\n      for (var i = 0; i < filterWords.length; i++) {\n        var word = filterWords[i];\n\n        if (tally[word] == null) {\n          tally[word] = 1;\n        } else {\n          tally[word] = tally[word] + 1;\n        }\n      }\n\n      var sentences = para.split(\".\");\n      console.log(tally);\n      var listItems = filterWords.map(function (phrase) {\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, phrase);\n      });\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, listItems);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"result\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Summary\"), this.truncate());\n    }\n  }]);\n\n  return Summary;\n}(React.Component);\n\nexport default Summary;","map":{"version":3,"sources":["/Users/akashgujjar/Desktop/akashsgujjar.github.io/skimmer/src/Summary.js"],"names":["React","Summary","props","truncate","bind","para","value","remove","words","split","filterWords","filter","word1","indexOf","tally","i","length","word","sentences","console","log","listItems","map","phrase","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass Summary extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.truncate = this.truncate.bind(this);\n  }\n    \n  truncate() {\n      var para = this.props.value;\n\n      const remove = [\n        'the', 'be', 'to', 'of', 'and', 'a', 'in', 'that', 'have', 'I', 'while', 'still',\n        'it', 'for', 'not', 'on', 'with', 'he', 'as', 'you', 'do', 'at', 'though', 'i', '—',\n        'this', 'but', 'his', 'by', 'from', 'they', 'we', 'say', 'her', 'she', 'or', 'will', 'an', \n        'my', 'one', 'all', 'would', 'there', 'their', 'what', 'so', 'up', 'out', 'if', 'about', \n        'who', 'get', 'which', 'go', 'when', 'me', 'make', 'can', 'like', 'time', 'no', 'just', \n        'him', 'know', 'take', 'person', 'into', 'year', 'your', 'good', 'some', 'could', 'them', \n        'see', 'other', 'than', 'then', 'now', 'look', 'only', 'come', 'its', 'over', 'think', \n        'also', 'back', 'after', 'use', 'two', 'how', 'our', 'first', 'well', 'way', 'even', 'has', \n        'new', 'want', 'because', 'any', 'these', 'give', 'day', 'most', 'us', 'is', 'are', 'was'];\n      const words = para.split(\" \");\n      const filterWords = words.filter(word1 => remove.indexOf(word1) < 0);\n      var tally = [];\n      for (var i = 0; i < filterWords.length; i++) {\n          var word = filterWords[i];\n          \n          if(tally[word] == null){\n              tally[word] = 1;\n          }\n          else{\n              tally[word] = tally[word]+1;\n          }\n      }\n      const sentences = para.split(\".\");\n      console.log(tally);\n      const listItems = filterWords.map(phrase => <li>{phrase}</li>);\n      return (<ul>{listItems}</ul>);\n  }\n\n  render() {\n    return (\n      <div className=\"result\">\n        <strong>Summary</strong>\n        {this.truncate()}\n      </div>\n    );\n  }\n}\n\nexport default Summary;"]},"metadata":{},"sourceType":"module"}