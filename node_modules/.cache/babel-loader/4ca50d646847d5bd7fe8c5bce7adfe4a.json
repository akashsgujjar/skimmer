{"ast":null,"code":"import _classCallCheck from \"/Users/akashgujjar/Desktop/akashsgujjar.github.io/skimmer/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/akashgujjar/Desktop/akashsgujjar.github.io/skimmer/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/akashgujjar/Desktop/akashsgujjar.github.io/skimmer/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/akashgujjar/Desktop/akashsgujjar.github.io/skimmer/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/akashgujjar/Desktop/akashsgujjar.github.io/skimmer/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/akashgujjar/Desktop/akashsgujjar.github.io/skimmer/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/akashgujjar/Desktop/akashsgujjar.github.io/skimmer/src/Summary.js\";\nimport React from 'react';\nimport './App.css';\n\nvar Summary =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Summary, _React$Component);\n\n  function Summary(props) {\n    var _this;\n\n    _classCallCheck(this, Summary);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Summary).call(this, props));\n    _this.truncate = _this.truncate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Summary, [{\n    key: \"truncate\",\n    value: function truncate() {\n      var para = this.props.value; //      const sentences = para.split(\".\");\n      //      const listItems = sentences.map(phrase => <li>{phrase}</li>);\n      //            return (<ul>{listItems}</ul>);\n\n      var words = para.split(\" \");\n      var tally = {};\n\n      for (var i = 0; i < words.length; i++) {\n        var word = words[i];\n\n        if (tally[word] == null) {\n          tally[word] = 1;\n        } else {\n          tally[word] = tally[word] + 1;\n        } //tally[words[i]] = 1;\n\n      }\n\n      console.log(tally);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"result\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Summary\"), this.truncate());\n    }\n  }]);\n\n  return Summary;\n}(React.Component);\n\nexport default Summary;","map":{"version":3,"sources":["/Users/akashgujjar/Desktop/akashsgujjar.github.io/skimmer/src/Summary.js"],"names":["React","Summary","props","truncate","bind","para","value","words","split","tally","i","length","word","console","log","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;;IAEMC,O;;;;;AAEJ,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,iFAAMA,KAAN;AACA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,uDAAhB;AAFiB;AAGlB;;;;+BAEU;AACP,UAAMC,IAAI,GAAG,KAAKH,KAAL,CAAWI,KAAxB,CADO,CAEb;AACA;AACA;;AAEM,UAAMC,KAAK,GAAGF,IAAI,CAACG,KAAL,CAAW,GAAX,CAAd;AACA,UAAIC,KAAK,GAAG,EAAZ;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAACI,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACnC,YAAIE,IAAI,GAAGL,KAAK,CAACG,CAAD,CAAhB;;AAEA,YAAGD,KAAK,CAACG,IAAD,CAAL,IAAe,IAAlB,EAAuB;AACnBH,UAAAA,KAAK,CAACG,IAAD,CAAL,GAAc,CAAd;AACH,SAFD,MAGI;AACAH,UAAAA,KAAK,CAACG,IAAD,CAAL,GAAcH,KAAK,CAACG,IAAD,CAAL,GAAY,CAA1B;AACH,SARkC,CASnC;;AACH;;AAEDC,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACH;;;6BAEQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEG,KAAKN,QAAL,EAFH,CADF;AAMD;;;;EArCmBH,KAAK,CAACe,S;;AAwC5B,eAAed,OAAf","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass Summary extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.truncate = this.truncate.bind(this);\n  }\n    \n  truncate() {\n      const para = this.props.value;\n//      const sentences = para.split(\".\");\n//      const listItems = sentences.map(phrase => <li>{phrase}</li>);\n//            return (<ul>{listItems}</ul>);\n\n      const words = para.split(\" \");\n      var tally = {};\n      for (var i = 0; i < words.length; i++) {\n          var word = words[i];\n          \n          if(tally[word] == null){\n              tally[word] = 1;\n          }\n          else{\n              tally[word] = tally[word]+1;\n          }\n          //tally[words[i]] = 1;\n      }\n      \n      console.log(tally);\n  }\n\n  render() {\n    return (\n      <div className=\"result\">\n        <strong>Summary</strong>\n        {this.truncate()}\n      </div>\n    );\n  }\n}\n\nexport default Summary;"]},"metadata":{},"sourceType":"module"}